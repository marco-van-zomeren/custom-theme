$utilities: () !default;
$utilities: map-merge(
  (
    "align": (
      property: vertical-align,
      class: align,
      values: baseline top middle bottom text-bottom text-top
    ),
    "float": (
      responsive: true,
      property: float,
      values: left right none
    ),
    "overflow": (
      property: overflow,
      values: auto hidden,
    ),
    "display": (
      responsive: true,
      print: true,
      property: display,
      class: d,
      values: none inline inline-block block table table-row table-cell flex inline-flex grid
    ),
    "shadow": (
      property: box-shadow,
      class: shadow,
      values: (
        null: $box-shadow,
        sm: $box-shadow-sm,
        lg: $box-shadow-lg,
        none: none,
      )
    ),
    "position": (
      property: position,
      values: static relative absolute fixed sticky
    ),
    "border": (
      property: border,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-top": (
      property: border-top,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-right": (
      property: border-right,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-bottom": (
      property: border-bottom,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-left": (
      property: border-left,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-color": (
      property: border-color,
      class: border,
      values: map-merge($theme-colors, ("white": $white))
    ),
    // Sizing utilities
    "width": (
	  responsive: true,
      property: width,
      class: w,
      values: (
		auto: auto,
		0: 0, 
        10: 10px,
        20: 20px,
		30: 30px,
		40: 40px,
        50: 50px,
		60: 60px,
		70: 70px,
		80: 80px,
		90: 90px,
        100: 100px,
		150: 150px,
		200: 200px,
		250: 250px,
        "25\\%": 25%,
        "50\\%": 50%,
        "75\\%": 75%,
        "100\\%": 100%,
        1rem: 1rem,
        2rem: 2rem,
        3rem: 3rem,
        4rem: 4rem,
        5rem: 5rem,
      )
    ),
    "min-width": (
      property: min-width,
      class: mw,
      values: (
		auto: auto,
		0: 0, 
        10: 10px,
        20: 20px,
		30: 30px,
		40: 40px,
        50: 50px,
		60: 60px,
		70: 70px,
		80: 80px,
		90: 90px,
        100: 100px,
        "25\\%": 25%,
        "50\\%": 50%,
        "75\\%": 75%,
        "100\\%": 100%,
      )
    ),
	"max-width": (
      property: max-width,
      class: mw,
      values: (
		auto: auto,
		0: 0, 
        10: 10px,
        20: 20px,
		30: 30px,
		40: 40px,
        50: 50px,
		60: 60px,
		70: 70px,
		80: 80px,
		90: 90px,
        100: 100px,
		1200: 1200px,
        "25\\%": 25%,
        "50\\%": 50%,
        "75\\%": 75%,
        "100\\%": 100%,
      )
    ),
    "viewport-width": (
      property: width,
      class: vw,
      values: (100: 100vw)
    ),
    "min-viewport-width": (
      property: min-width,
      class: min-vw,
      values: (100: 100vw)
    ),
    "height": (
      responsive: true,
      property: height,
      class: h,
      values: (
		auto: auto,
		0: 0, 
        10: 10px,
        20: 20px,
		30: 30px,
		40: 40px,
        50: 50px,
		60: 60px,
		70: 70px,
		80: 80px,
		90: 90px,
        100: 100px,
        150: 150px,
		200: 200px,
        250: 250px,
		300: 300px,
        350: 350px,
		400: 400px,
        450: 450px,
		500: 500px,
		"25\\%": 25%,
        "50\\%": 50%,
        "75\\%": 75%,
        "100\\%": 100%, 
      )
    ),
    "max-height": (
	  responsive: true,		
      property: max-height,
      class: mh,
      values: (
	  	0: 0, 
        10: 10px,
        20: 20px,
		30: 30px,
		40: 40px,
        50: 50px,
		60: 60px,
		70: 70px,
		80: 80px,
		90: 90px,
        100: 100px,
		"25\\%": 25%,
        "50\\%": 50%,
        "75\\%": 75%,
        "100\\%": 100%,
	  )
    ),
    "viewport-height": (
	  responsive: true,	
      property: height,
      class: vh,
      values: (
		10: 10vh,
        20: 20vh,
		30: 30vh,
		40: 40vh,
        50: 50vh,
		60: 60vh,
		70: 70vh,
		80: 80vh,
		90: 90vh,
        100: 100vh
	  )
    ),
    "min-viewport-height": (
      property: min-height,
      class: min-vh,
      values: (100: 100vh)
    ),
    // Flex utilities
    "flex": (
      responsive: true,
      property: flex,
      values: (fill: 1 1 auto)
    ),
    "flex-direction": (
      responsive: true,
      property: flex-direction,
      class: flex,
      values: row column row-reverse column-reverse
    ),
    "flex-grow": (
      responsive: true,
      property: flex-grow,
      class: flex,
      values: (
        grow-0: 0,
        grow-1: 1,
      )
    ),
    "flex-shrink": (
      responsive: true,
      property: flex-shrink,
      class: flex,
      values: (
        shrink-0: 0,
        shrink-1: 1,
      )
    ),
    "flex-wrap": (
      responsive: true,
      property: flex-wrap,
      class: flex,
      values: wrap nowrap wrap-reverse
    ),
    "justify-content": (
      responsive: true,
      property: justify-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
      )
    ),
    "align-items": (
      responsive: true,
      property: align-items,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch,
      )
    ),
    "align-content": (
      responsive: true,
      property: align-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        stretch: stretch,
      )
    ),
    "align-self": (
      responsive: true,
      property: align-self,
      values: (
        auto: auto,
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch,
      )
    ),
    "order": (
      responsive: true,
      property: order,
      values: (
        first: -1,
        0: 0,
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        last: 6,
      ),
    ),
    // Margin utilities
    "margin": (
      responsive: true,
      property: margin,
      class: m,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-x": (
      responsive: true,
      property: margin-right margin-left,
      class: mx,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-y": (
      responsive: true,
      property: margin-top margin-bottom,
      class: my,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-top": (
      responsive: true,
      property: margin-top,
      class: mt,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-right": (
      responsive: true,
      property: margin-right,
      class: mr,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-bottom": (
      responsive: true,
      property: margin-bottom,
      class: mb,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-left": (
      responsive: true,
      property: margin-left,
      class: ml,
      values: map-merge($spacers, (auto: auto))
    ),
    // Negative margin utilities
    "negative-margin": (
      responsive: true,
      property: margin,
      class: m,
      values: $negative-spacers
    ),
    "negative-margin-x": (
      responsive: true,
      property: margin-right margin-left,
      class: mx,
      values: $negative-spacers
    ),
    "negative-margin-y": (
      responsive: true,
      property: margin-top margin-bottom,
      class: my,
      values: $negative-spacers
    ),
    "negative-margin-top": (
      responsive: true,
      property: margin-top,
      class: mt,
      values: $negative-spacers
    ),
    "negative-margin-right": (
      responsive: true,
      property: margin-right,
      class: mr,
      values: $negative-spacers
    ),
    "negative-margin-bottom": (
      responsive: true,
      property: margin-bottom,
      class: mb,
      values: $negative-spacers
    ),
    "negative-margin-left": (
      responsive: true,
      property: margin-left,
      class: ml,
      values: $negative-spacers
    ),
    // Padding utilities
    "padding": (
      responsive: true,
      property: padding,
      class: p,
      values: $spacers
    ),
    "padding-x": (
      responsive: true,
      property: padding-right padding-left,
      class: px,
      values: $spacers
    ),
    "padding-y": (
      responsive: true,
      property: padding-top padding-bottom,
      class: py,
      values: $spacers
    ),
    "padding-top": (
      responsive: true,
      property: padding-top,
      class: pt,
      values: $spacers
    ),
    "padding-right": (
      responsive: true,
      property: padding-right,
      class: pr,
      values: $spacers
    ),
    "padding-bottom": (
      responsive: true,
      property: padding-bottom,
      class: pb,
      values: $spacers
    ),
    "padding-left": (
      responsive: true,
      property: padding-left,
      class: pl,
      values: $spacers
    ),
    // Text
    "font-weight": (
      property: font-weight,
      values: (
        light: $font-weight-light,
        lighter: $font-weight-lighter,
        normal: $font-weight-normal,
        bold: $font-weight-bold,
        bolder: $font-weight-bolder
      )
    ),
    "text-transform": (
      property: text-transform,
      class: text,
      values: lowercase uppercase capitalize
    ),
    "text-align": (
      responsive: true,
      property: text-align,
      class: text,
      values: left right center
    ),
    "color": (
      property: color,
      class: text,
      values: map-merge(
        $theme-colors,
        (
          "white": $white,
          "body": $body-color,
          "black-50": rgba($black, .5),
          "white-50": rgba($white, .5),
          "reset": inherit,
        )
      )
    ),
    "line-height": (
      property: line-height,
      class: lh,
      values: (
        1: 1,
        sm: $line-height-sm,
        base: $line-height-base,
        lg: $line-height-lg,
		10: 10px,
		20: 20px,
		30: 30px,
		40: 40px,
		50: 50px
      )
    ),
    "background-color": (
      property: background-color,
      class: bg,
      values: map-merge(
        $theme-colors,
        (
          "body": $body-bg,
          "white": $white,
          "transparent": transparent
        )
      )
    ),
    "white-space": (
      property: white-space,
      class: text,
      values: (
        wrap: normal,
        nowrap: nowrap,
      )
    ),
    "text-decoration": (
      property: text-decoration,
      values: none underline line-through
    ),
    "font-style": (
      property: font-style,
      class: font,
      values: italic normal
    ),
    "word-wrap": (
      property: word-wrap,
      class: text,
      values: (break: break-word)
    ),
    "font-family": (
      property: font-family,
      class: font,
      values: (monospace: var(--bs-font-monospace))
    ),
    "user-select": (
      property: user-select,
      values: all auto none
    ),
    "pointer-events": (
      property: pointer-events,
      class: pe,
      values: none auto,
    ),
    "border-radius": (
      property: border-radius,
      class: rounded,
      values: (
        null: $border-radius,
        sm: $border-radius-sm,
        lg: $border-radius-lg,
        circle: 50%,
        pill: $rounded-pill,
        0: 0,
      )
    ),
    "rounded-top": (
      property: border-top-left-radius border-top-right-radius,
      class: rounded-top,
      values: (null: $border-radius)
    ),
    "rounded-right": (
      property: border-top-right-radius border-bottom-right-radius,
      class: rounded-right,
      values: (null: $border-radius)
    ),
    "rounded-bottom": (
      property: border-bottom-right-radius border-bottom-left-radius,
      class: rounded-bottom,
      values: (null: $border-radius)
    ),
    "rounded-left": (
      property: border-bottom-left-radius border-top-left-radius,
      class: rounded-left,
      values: (null: $border-radius)
    ),
    "visibility": (
      property: visibility,
      class: null,
      values: (
        visible: visible,
        invisible: hidden,
      )
    ),
	// EXTENSIONS
	// FONT SIZE
	"font-size": (	
      property: font-size,
	  class: font-s,
      values: (
		  sm: $font-size-sm, 
		  md: $font-size-md,
		  lg: $font-size-lg,
		  xl: $font-size-xl,
	  )
    ), 
	"grays": (
      property: color,
      class: color-gray,
      values: $grays
    ),
	// POSITION
	  "top": (
	  responsive: true,	  
	  class: top,
      property: top,
      values: (
		0:0,
		1: 1px,
		2: 2px,
		3: 3px,
		4: 4px, 
		5: 5px,
		6: 6px,
		7: 7px,
		8: 8px,
		9: 9px,  
		10: 10px,
        20: 20px,
		30: 30px,
		40: 40px,
        50: 50px,
		60: 60px,
		70: 70px,
		80: 80px,
		90: 90px,
        100: 100px,
		"50\\%": 50%,
      )
    ),
	"right": (
	  responsive: true,		
	  class: right,
      property: right,
      values: (
		0:0,
		1: 1px,
		2: 2px,
		3: 3px,
		4: 4px, 
		5: 5px,
		6: 6px,
		7: 7px,
		8: 8px,
		9: 9px,  
		10: 10px,
        20: 20px,
		30: 30px,
		40: 40px,
        50: 50px,
		60: 60px,
		70: 70px,
		80: 80px,
		90: 90px,
        100: 100px,
		"50\\%": 50%,
      )
    ),
	"bottom": (
	  responsive: true,	
	  class: bottom,
      property: bottom,
      values: (
		0:0,
		1: 1px,
		2: 2px,
		3: 3px,
		4: 4px, 
		5: 5px,
		6: 6px,
		7: 7px,
		8: 8px,
		9: 9px,  
		10: 10px,
        20: 20px,
		30: 30px,
		40: 40px,
        50: 50px,
		60: 60px,
		70: 70px,
		80: 80px,
		90: 90px,
        100: 100px,
		"50\\%": 50%,
      )
    ),
	"left": (
	  responsive: true,		
	  class: left,
      property: left,
      values: (
		0:0,
		1: 1px,
		2: 2px,
		3: 3px,
		4: 4px, 
		5: 5px,
		6: 6px,
		7: 7px,
		8: 8px,
		9: 9px,  
		10: 10px,
        20: 20px,
		30: 30px,
		40: 40px,
        50: 50px,
		60: 60px,
		70: 70px,
		80: 80px,
		90: 90px,
        100: 100px,
		"50\\%": 50%,
      )
    ),
	// OBJECTFIT
	  "object-fit": (
      property: object-fit,
      values: (
      	fill: fill,
		contain: contain,
		cover: cover,
		scale-down: scale-down
      )
    ),
	// TRANSFORM
	  "transform": (
      property: transform,
      values: none
    ),
	// Z-INDEX
	"z-index": (
	  responsive: true,		
	  class: z,
      property: z-index,
      values: (
		0:0,
		1: 1,
		2: 2,
		3: 3,
		4: 4, 
		5: 5,
		6: 6,
		7: 7,
		8: 8,
		9: 9,  
		10: 10
      )
    ),
	// CSS GRID
	"row-gap": (
      property:,
      values: (null:20px)
    ),
	// SPAN 
	"span": (	
	  responsive: true,
      property: grid-column,
	  class: span,
      values: (
		1: span 1,
		2: span 2,
		3: span 3,
		4: span 4, 
		5: span 5,
		6: span 6,
		7: span 7,
		8: span 8,
		9: span 9,  
		10: span 10,
		11: span 11,
		12: span 12,
      )
    ), 
	// GRID-COLUM-START 
	"gcs": (	
	  responsive: true,
      property: grid-column-start,
	  class: gcs,
      values: (
		1: 1,
		2: 2,
		3: 3,
		4: 4, 
		5: 5,
		6: 6,
		7: 7,
		8: 8,
		9: 9,  
		10: 10,
		11: 11,
		12: 12,
		13: 13,
      )
    ), 
	// GRID-COLUM-START 
	"gce": (	
	  responsive: true,
      property: grid-column-end,
	  class: gce,
      values: (
		1: 1,
		2: 2,
		3: 3,
		4: 4, 
		5: 5,
		6: 6,
		7: 7,
		8: 8,
		9: 9,  
		10: 10,
		11: 11,
		12: 12,
		13: 13,
      )
    ), 
	// GRID-TEMPLATE-COLUMS  
	"gtc": (	
	  responsive: true,
      property: grid-template-columns,
	  class: gtc,
      values: (
		1: "repeat 1, 1fr",
		2: "repeat 2, 1fr",
		3: "repeat 3, 1fr",
		4: "repeat 4, 1fr", 
		5: "repeat 5, 1fr",
		6: "repeat 6, 1fr",
		7: "repeat 7, 1fr",
		8: "repeat 8, 1fr",
		9: "repeat 9, 1fr",  
		10: "repeat 10, 1fr",
		11: "repeat 11, 1fr",
		12: "repeat 12, 1fr",
      )
    ), 
	// GRID COLUMN GAP
	"gcg": (	
      property: grid-column-gap,
	  class: gcg,
      values: (
		  20: 20px, 
		  40: 40px
	  )
    ), 
	// GRID-AUTO-ROWS
	"gar": (	
      property: grid-auto-rows,
	  class: gar,
      values: auto min-content max-content
    ), 
    // REPEAT FOR CHILDREN
     "c:float": (
      responsive: true,
      property: float,
      class: "c\\:float",
      values: left right none
    ),
	// END EXTENSIONS
  ),
  $utilities
);
